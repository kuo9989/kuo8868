import sys
from PyQt5 import QtWidgets, QtGui, QtCore
import socket
from threading import Thread

class ClientWindow(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.init_ui()

    def init_ui(self):
        self.setWindowTitle("Socket Chat Client")

        self.chat_box = QtWidgets.QTextEdit(self)
        self.chat_box.setReadOnly(True)

        self.input_box = QtWidgets.QLineEdit(self)
        self.send_button = QtWidgets.QPushButton("Send", self)

        self.layout = QtWidgets.QVBoxLayout()
        self.layout.addWidget(self.chat_box)

        input_layout = QtWidgets.QHBoxLayout()
        input_layout.addWidget(self.input_box)
        input_layout.addWidget(self.send_button)
        self.layout.addLayout(input_layout)

        self.setLayout(self.layout)

        self.send_button.clicked.connect(self.send_message)

        self.host = socket.gethostname()
        self.port = 2255
        self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.s.connect((self.host, self.port))

        self.receive_thread = Thread(target=self.receive_messages)
        self.receive_thread.daemon = True
        self.receive_thread.start()

    def receive_messages(self):
        while True:
            msg = self.s.recv(1024).decode()
            if not msg:
                break
            self.chat_box.append("Server: " + msg)

    def send_message(self):
        msg = self.input_box.text()
        self.chat_box.append("Client: " + msg)
        self.s.send(msg.encode())
        self.input_box.clear()

    def closeEvent(self, event):
        self.s.close()
        event.accept()

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    client_window = ClientWindow()
    client_window.show()
    sys.exit(app.exec_())
